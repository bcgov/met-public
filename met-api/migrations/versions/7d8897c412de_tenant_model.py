"""Tenant model

Revision ID: 7d8897c412de
Revises: 7cb3da03c2a2
Create Date: 2023-04-03 16:05:38.516851

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from flask import current_app
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d8897c412de'
down_revision = '7cb3da03c2a2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    tenant_table = op.create_table('tenant',
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('short_name', sa.String(length=10), nullable=False, comment='A small code for the tenant ie GDX , EAO.'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='Full name of the ministry.ie Env Assessment Office'),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    default_id = "1"
    op.bulk_insert(tenant_table, [
        {
         'short_name': current_app.config.get('DEFAULT_TENANT_SHORT_NAME') ,
         'name': current_app.config.get('DEFAULT_TENANT_NAME'),
         'description': current_app.config.get('DEFAULT_TENANT_DESCRIPTION'),
         "created_date": datetime.utcnow()}
    ])

    op.add_column('email_verification', sa.Column('tenant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('email_verification_tenant_fk', 'email_verification', 'tenant', ['tenant_id'], ['id'])

    op.add_column('engagement', sa.Column('tenant_id', sa.Integer(), nullable=True ,server_default = default_id))
    op.create_foreign_key('engagement_tenant_fk', 'engagement', 'tenant', ['tenant_id'], ['id'])

    op.add_column('feedback', sa.Column('tenant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('feedback_tenant_fk', 'feedback', 'tenant', ['tenant_id'], ['id'])

    op.add_column('membership', sa.Column('tenant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('membership_tenant_fk', 'membership', 'tenant', ['tenant_id'], ['id'])

    op.add_column('survey', sa.Column('tenant_id', sa.Integer(), nullable=True))
    op.create_foreign_key('survey_tenant_fk', 'survey', 'tenant', ['tenant_id'], ['id'])

    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tenant')
    op.drop_constraint('survey_tenant_fk', 'survey', type_='foreignkey')
    op.drop_column('survey', 'tenant_id')
    op.drop_constraint('membership_tenant_fk', 'membership', type_='foreignkey')
    op.drop_column('membership', 'tenant_id')
    op.drop_constraint('feedback_tenant_fk', 'feedback', type_='foreignkey')
    op.drop_column('feedback', 'tenant_id')
    op.drop_constraint('engagement_tenant_fk', 'engagement', type_='foreignkey')
    op.drop_column('engagement', 'tenant_id')
    op.drop_constraint('email_verification_tenant_fk', 'email_verification', type_='foreignkey')

    op.drop_table('tenant')

    # ### end Alembic commands ###
