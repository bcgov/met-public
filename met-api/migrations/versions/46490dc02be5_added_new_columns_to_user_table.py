"""added new columns to user table

Revision ID: 46490dc02be5
Revises: 2b12a6cd987a
Create Date: 2022-12-07 05:38:57.574536

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '46490dc02be5'
down_revision = '2b12a6cd987a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    rename_table_query = 'ALTER TABLE  \"user\" rename to met_users'
    op.execute(rename_table_query)

    op.create_table('user_status',
                    sa.Column('created_date', sa.DateTime(), nullable=False),
                    sa.Column('updated_date', sa.DateTime(), nullable=True),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('status_name', sa.String(length=50), nullable=True),
                    sa.Column('description', sa.String(length=50), nullable=True),
                    sa.Column('created_by', sa.String(length=50), nullable=True),
                    sa.Column('modified_by_id', sa.String(length=50), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    user_status = sa.table('user_status',
                           sa.column('id', sa.Integer),
                           sa.column('status_name', sa.String),
                           sa.column('description', sa.String),
                           sa.column('created_date', sa.DateTime),
                           sa.column('updated_date', sa.DateTime))

    op.bulk_insert(user_status, [
        {'id': 1, 'status_name': 'ACTIVE', 'description': 'Active User', 'created_date': datetime.utcnow(),
         'updated_date': datetime.utcnow()},
        {'id': 2, 'status_name': 'INACTIVE', 'description': 'Inactive User', 'created_date': datetime.utcnow(),
         'updated_date': datetime.utcnow()}
    ])

    op.add_column('met_users', sa.Column('username', sa.String(length=100), nullable=True))
    op.add_column('met_users', sa.Column('access_type', sa.String(length=200), nullable=True))
    op.add_column('met_users', sa.Column('status_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_user_username'), 'met_users', ['username'], unique=False)
    op.create_foreign_key('user_status_fk', 'met_users', 'user_status', ['status_id'], ['id'])

    # update everyone to active
    update_all_users_to_active = 'UPDATE met_users SET status_id = 1'
    op.execute(update_all_users_to_active)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    update_type_query = 'ALTER TABLE  met_users rename to \"user\"'
    op.execute(update_type_query)

    op.drop_constraint('user_status_fk', 'user', type_='foreignkey')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_column('user', 'status_id')
    op.drop_column('user', 'access_type')
    op.drop_column('user', 'username')
    op.drop_table('user_status')
    # ### end Alembic commands ###
