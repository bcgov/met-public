{
	"info": {
		"_postman_id": "8cbabcb2-0fd9-4771-9299-0c83ac125853",
		"name": "MET",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23501006"
	},
	"item": [
		{
			"name": "Surveys",
			"item": [
				{
					"name": "GET Surveys",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Returns name objects containing name\", () => {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.names).to.exist\r",
									"    for (var i=0; i<jsonData.names.length; i++) {\r",
									"        pm.expect(jsonData.names[i].legalName).to.exist\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Returns name objects containing name\", () => {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.names).to.exist\r",
									"    for (var i=0; i<jsonData.names.length; i++) {\r",
									"        pm.expect(jsonData.names[i].legalName).to.exist\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/surveys",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"surveys"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "size",
									"value": "10",
									"disabled": true
								},
								{
									"key": "sort_key",
									"value": "name",
									"disabled": true
								},
								{
									"key": "search_text",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Returns name objects containing name\", () => {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.names).to.exist\r",
									"    for (var i=0; i<jsonData.names.length; i++) {\r",
									"        pm.expect(jsonData.names[i].legalName).to.exist\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/surveys/{{SURVEY_ID}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"surveys",
								"{{SURVEY_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Survey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Returns Survey Data\", () => {\r",
									"    var jsonData = pm.response.json().result\r",
									"    console.log(jsonData)\r",
									"    pm.expect(jsonData.name).to.exist\r",
									"    pm.expect(jsonData.form_json).to.exist\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{SURVEY_NAME}}\",\r\n    \"form_json\": {\r\n        \"display\": \"form\",\r\n        \"components\": []\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/surveys/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"surveys",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Engagements",
			"item": [
				{
					"name": "GET Engagements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Engagement JSON Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    console.log(jsonData);\r",
									"    for (var i=0; i<jsonData.items.length; i++) {\r",
									"        pm.expect(jsonData.items[i].legalName).to.exist\r",
									"           pm.expect(jsonData.id).to.exist\r",
									"    pm.expect(jsonData.name).to.exist\r",
									"    pm.expect(jsonData.banner_filename).to.exist\r",
									"    pm.expect(jsonData.created_by).to.exist\r",
									"    pm.expect(jsonData.created_date).to.exist\r",
									"    pm.expect(jsonData.updated_date).to.exist\r",
									"    pm.expect(jsonData.content).to.exist\r",
									"    pm.expect(jsonData.rich_description).to.exist\r",
									"    pm.expect(jsonData.description).to.exist\r",
									"    }\r",
									" \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/engagements",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"engagements"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "What page number it is on",
									"disabled": true
								},
								{
									"key": "size",
									"value": "10",
									"description": "How many results",
									"disabled": true
								},
								{
									"key": "sort_key",
									"value": "name",
									"description": "Sort key",
									"disabled": true
								},
								{
									"key": "search_text",
									"value": " ",
									"description": "name to filter by",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Engagement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Engagement JSON Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"    pm.expect(jsonData.name).to.exist\r",
									"    pm.expect(jsonData.banner_filename).to.exist\r",
									"    pm.expect(jsonData.created_by).to.exist\r",
									"    pm.expect(jsonData.content).to.exist\r",
									"    pm.expect(jsonData.rich_content).to.exist\r",
									"    pm.expect(jsonData.rich_description).to.exist\r",
									"    pm.expect(jsonData.description).to.exist\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{ENGAGEMENT_NAME}}\",\r\n    \"start_date\": \"{{ENGAGEMENT_START_DATE}}\",\r\n    \"status_id\": {{ENGAGEMENT_STATUS_ID}},\r\n    \"end_date\": \"{{ENGAGEMENT_END_DATE}}\",\r\n    \"description\": \"{{ENGAGEMENT_DESCRIPTION}}\",\r\n    \"rich_description\": \"{\\\"blocks\\\":[{\\\"key\\\":\\\"668ab\\\",\\\"text\\\":\\\"dsadsa\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\r\n    \"content\": \"dsadsa\",\r\n    \"rich_content\": \"{\\\"blocks\\\":[{\\\"key\\\":\\\"1v676\\\",\\\"text\\\":\\\"dsadsa\\\",\\\"type\\\":\\\"unstyled\\\",\\\"depth\\\":0,\\\"inlineStyleRanges\\\":[],\\\"entityRanges\\\":[],\\\"data\\\":{}}],\\\"entityMap\\\":{}}\",\r\n    \"banner_filename\": \"{{ENGAGEMENT_BANNER_FILENAME}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/engagements/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"engagements",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Engagement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Engagement JSON Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    console.log(jsonData);\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"    pm.expect(jsonData.name).to.exist\r",
									"    pm.expect(jsonData.banner_filename).to.exist\r",
									"    pm.expect(jsonData.created_by).to.exist\r",
									"    pm.expect(jsonData.created_date).to.exist\r",
									"    pm.expect(jsonData.content).to.exist\r",
									"    pm.expect(jsonData.rich_description).to.exist\r",
									"    pm.expect(jsonData.description).to.exist\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followAuthorizationHeader": false
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "useBrowser",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/engagements/{{ENGAGEMENT_ID}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"engagements",
								"{{ENGAGEMENT_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "GET Comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Comment List Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    console.log(jsonData);\r",
									"    for (var i=0; i<jsonData.items.length; i++) {\r",
									"        pm.expect(jsonData.items[i].id).to.exist\r",
									"        pm.expect(jsonData.items[i].comment_status).to.exist\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/comments/survey/{{SURVEY_ID}}?page=1&size=10&sort_key=comment.id&sort_order=desc&search_text=",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"comments",
								"survey",
								"{{SURVEY_ID}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort_key",
									"value": "comment.id"
								},
								{
									"key": "sort_order",
									"value": "desc"
								},
								{
									"key": "search_text",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Comment Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    console.log(jsonData);\r",
									"    pm.expect(jsonData.id).to.exist\r",
									"    pm.expect(jsonData.comment_status).to.exist\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/comments/{{COMMENT_ID}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"comments",
								"{{COMMENT_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Feedback",
			"item": [
				{
					"name": "Create Feedback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Feedback JSON Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"    pm.expect(jsonData.rating).to.exist\r",
									"    pm.expect(jsonData.comment).to.exist\r",
									"    pm.expect(jsonData.submission_path).to.exist\r",
									"    pm.expect(jsonData.comment_type).to.exist\r",
									"    pm.expect(jsonData.created_date).to.exist\r",
									"    pm.expect(jsonData.source).to.exist\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "useBrowser",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\": {{FEEDBACK_RATING}},\r\n    \"comment\": \"{{FEEDBACK_COMMENT}}\",\r\n    \"submission_path\": \"{{FEEDBACK_SUBMISSION_PATH}}\",\r\n    \"comment_type\":{{FEEDBACK_COMMENT_TYPE}},\r\n    \"created_date\": \"{{FEEDBACK_CREATED_DATE}}\",\r\n    \"source\": {{FEEDBACK_SOURCE}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{API_URL}}/api/feedbacks/",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"feedbacks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Feedback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('should return JSON', function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Feedback JSON Data\", () => {\r",
									"    var jsonData = pm.response.json().result;\r",
									"      for (var i=0; i<jsonData.items.length; i++) {\r",
									"    pm.expect(jsonData.items[i].rating).to.exist\r",
									"    pm.expect(jsonData.items[i].comment).to.exist\r",
									"    pm.expect(jsonData.items[i].submission_path).to.exist\r",
									"    pm.expect(jsonData.items[i].comment_type).to.exist\r",
									"    pm.expect(jsonData.items[i].created_date).to.exist\r",
									"    pm.expect(jsonData.items[i].source).to.exist\r",
									"    }\r",
									"\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "useBrowser",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "clientId",
									"value": "met-web",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://met-oidc-dev.apps.gold.devops.gov.bc.ca/auth/realms/met/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://met-web-dev.apps.gold.devops.gov.bc.ca/",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "met",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/api/feedbacks?page=1&size=10&sort_key=rating&sort_order= asc",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"api",
								"feedbacks"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "What page number it is on"
								},
								{
									"key": "size",
									"value": "10",
									"description": "How many results"
								},
								{
									"key": "sort_key",
									"value": "rating",
									"description": "Sort key"
								},
								{
									"key": "sort_order",
									"value": " asc",
									"description": "name to filter by"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_URL",
			"value": "",
			"type": "string"
		},
		{
			"key": "SURVEY_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "SURVEY_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "COMMENT_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_DESCRIPTION",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "ENGAGEMENT_RICH_DESCRIPTION",
			"value": "Rich Description",
			"type": "string",
			"disabled": true
		},
		{
			"key": "ENGAGEMENT_START_DATE",
			"value": "2022-09-23",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_END_DATE",
			"value": "2022-09-23",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_STATUS_ID",
			"value": "1",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_CREATED_BY",
			"value": "David",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_CREATED_DATE",
			"value": "2022-09-23",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_BANNER_FILENAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_CONTENT",
			"value": "Content",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_RICH_CONTENT",
			"value": "Rich Content",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_PUBLISHED_DATE",
			"value": "2022-09-23",
			"type": "string"
		},
		{
			"key": "ENGAGEMENT_UPDATED_DATE",
			"value": "2022-09-23",
			"type": "string"
		},
		{
			"key": "FEEDBACK_RATING",
			"value": "",
			"type": "string"
		},
		{
			"key": "FEEDBACK_COMMENT",
			"value": "US",
			"type": "string"
		},
		{
			"key": "FEEDBACK_SUBMISSION_PATH",
			"value": "US",
			"type": "string"
		},
		{
			"key": "FEEDBACK_SOURCE",
			"value": "",
			"type": "string"
		},
		{
			"key": "FEEDBACK_CREATED_DATE",
			"value": "",
			"type": "string"
		},
		{
			"key": "FEEDBACK_COMMENT_TYPE",
			"value": "",
			"type": "string"
		}
	]
}