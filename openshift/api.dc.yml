apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: api-deploy-template
  annotations:
    description: "Deployment Configuration Template for the MET API Project"
    tags: "met, api, python"
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        pre:
          execNewPod:
            command:
            - /opt/app-root/pre-hook-update-db.sh
            containerName: ${APP}
          failurePolicy: Abort
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP}
          environment: ${ENV}
          role: api
          app-group: met-app
      spec:
        containers:
        - env:
          - name: FLASK_ENV
            value: production
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                key: met-username
                name: met-database-users
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: met-password
                name: met-database-users
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: app-db-name
                name: ${DB_APP_NAME}
          - name: DATABASE_HOST
            value: ${DB_APP_NAME}
          - name: DATABASE_PORT
            value: ${DB_APP_PORT}
          - name: S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: secret-access-key
                name: s3
          - name: CORS_ORIGINS
            value: ${CORS_ORIGINS}
          - name: KEYCLOAK_BASE_URL
            value: ${KEYCLOAK_BASE_URL}
          - name: DEFAULT_TENANT_SHORT_NAME
            value: ${DEFAULT_TENANT_SHORT_NAME}
          envFrom:
          - configMapRef:
              name: ${APP}
          - configMapRef:
              name: jwt-oidc
          - configMapRef:
              name: s3-objectstore
          - secretRef:
              name: met-service-account
          imagePullPolicy: Always
          name: ${APP}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 150m
              memory: 512Mi
            requests:
              cpu: 75m
              memory: 100Mi
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP}
        from:
          kind: ImageStreamTag
          name: ${APP}:${IMAGE_TAG}
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: autoscaling/v2beta2
  kind: HorizontalPodAutoscaler
  metadata:
    name: metapihpa
  spec:
    scaleTargetRef:
      kind: DeploymentConfig
      name: ${APP}
      apiVersion: apps.openshift.io/v1
    minReplicas: 2
    maxReplicas: 3
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}-web-path
  spec:
    host: met-web-${ENV}.apps.gold.devops.gov.bc.ca
    path: /api
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APP}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: jwt-oidc
      app-group: met-app
    name: jwt-oidc
  data:
    JWT_OIDC_ALGORITHMS: RS256
    JWT_OIDC_AUDIENCE: account
    JWT_OIDC_ISSUER: https://${KC_DOMAIN}/auth/realms/met
    JWT_OIDC_JWKS_URI: https://${KC_DOMAIN}/auth/realms/met/protocol/openid-connect/certs
    JWT_OIDC_WELL_KNOWN_CONFIG: https://${KC_DOMAIN}/auth/realms/met/.well-known/openid-configuration
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: s3-objectstore
      app-group: met-app
    name: s3-objectstore
  data:
    S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
    S3_BUCKET: ${S3_BUCKET}
    S3_HOST: citz-gdx.objectstore.gov.bc.ca
    S3_REGION: us-east-1
    S3_SERVICE: execute-api
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  data:
    ACCESS_REQUEST_EMAIL_ADDRESS: ${ACCESS_REQUEST_EMAIL_ADDRESS}
    ACCESS_REQUEST_EMAIL_TEMPLATE_ID: ${ACCESS_REQUEST_EMAIL_TEMPLATE_ID}
    CORS_MAX_AGE: ${CORS_MAX_AGE}
    CSS_API_ENVIRONMENT: ${CSS_API_ENVIRONMENT}
    CSS_API_INTEGRATION_ID: ${CSS_API_INTEGRATION_ID}
    CSS_API_URL: ${CSS_API_URL}
    EMAIL_ENVIRONMENT: ${EMAIL_ENVIRONMENT}
    NOTIFICATIONS_EMAIL_ENDPOINT: ${NOTIFICATIONS_EMAIL_ENDPOINT}    
    SITE_URL: ${SITE_URL}
    VERIFICATION_EMAIL_TEMPLATE_ID: ${VERIFICATION_EMAIL_TEMPLATE_ID}
    SUBSCRIBE_EMAIL_TEMPLATE_ID: ${SUBSCRIBE_EMAIL_TEMPLATE_ID}
    SUBMISSION_RESPONSE_EMAIL_TEMPLATE_ID: ${SUBMISSION_RESPONSE_EMAIL_TEMPLATE_ID}
    REJECTED_EMAIL_TEMPLATE_ID: ${REJECTED_EMAIL_TEMPLATE_ID}
    CLOSED_ENGAGEMENT_REJECTED_EMAIL_TEMPLATE_ID: ${CLOSED_ENGAGEMENT_REJECTED_EMAIL_TEMPLATE_ID}    
    KEYCLOAK_REALMNAME: ${KEYCLOAK_REALMNAME}
    KEYCLOAK_BASE_URL: ${KEYCLOAK_BASE_URL}
    KEYCLOAK_ADMIN_TOKEN_URL: ${KEYCLOAK_ADMIN_TOKEN_URL}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: met-service-account
    labels:
      app: met-service-account
      app-group: met-app
  stringData:
    MET_ADMIN_CLIENT_ID: ${MET_ADMIN_CLIENT_ID}
    MET_ADMIN_CLIENT_SECRET: ${MET_ADMIN_CLIENT_SECRET}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: s3
    labels:
      app: s3
      app-group: met-app
  stringData:
    secret-access-key: ${S3_ACCESS_KEY}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: met-cdogs-secret
    labels:
      app: met-cdogs-secret
      app-group: met-app
  stringData:
    CDOGS_BASE_URL: ${CDOGS_BASE_URL}
    CDOGS_SERVICE_CLIENT: ${CDOGS_SERVICE_CLIENT}
    CDOGS_SERVICE_CLIENT_SECRET: ${CDOGS_SERVICE_CLIENT_SECRET}
    CDOGS_TOKEN_URL: ${CDOGS_TOKEN_URL}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: email-secret-key
    labels:
      app: email-secret-key
      app-group: met-app
  stringData:
    EMAIL_SECRET_KEY: ${EMAIL_SECRET_KEY}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: keycloak-admin-credentials
    labels:
      app: keycloak-admin-credentials
      app-group: met-app
  stringData:
    KEYCLOAK_ADMIN_CLIENT_ID: ${KEYCLOAK_ADMIN_CLIENT_ID}
    KEYCLOAK_ADMIN_CLIENT_SECRET: ${KEYCLOAK_ADMIN_CLIENT_SECRET}
parameters:
  - name: APP
    description: "The application name"
    required: true
    value: met-api
  - name: IMAGE_NAMESPACE
    description: "The image stream location namespace"
    required: true
    value: e903c2-tools
  - name: ENV
    description: "The selected environment (dev, test, prod)"
    required: true
    value: dev
  - name: KC_DOMAIN
    description: "The keycloak domain"
    required: true
    value: met-oidc-dev.apps.gold.devops.gov.bc.ca
  - name: SITE_URL
    description: "The frontend site URL"
    required: true
    value: 'https://met-web-dev.apps.gold.devops.gov.bc.ca'
  - name: NOTIFICATIONS_EMAIL_ENDPOINT
    description: "The email notification endpoint"
    required: true
    value: 'https://met-notify-api-dev.apps.gold.devops.gov.bc.ca/api/v1/notifications/email'
  - name: ACCESS_REQUEST_EMAIL_ADDRESS
    description: "The access request email address"
    required: true
    value: sample@sample.com
  - name: VERIFICATION_EMAIL_TEMPLATE_ID
    description: "The email verification template id"
    required: true
    value: 'c4cc1633-321a-4400-8a22-272acecd836a'
  - name: SUBSCRIBE_EMAIL_TEMPLATE_ID
    description: "The subscribe email verification template id"
    required: true
    value: '9cd4942b-8ac9-49ae-a869-c800c57a7472'
  - name: SUBMISSION_RESPONSE_EMAIL_TEMPLATE_ID
    description: "The response to submission email template id"
    required: true
    value: '07f0f037-5ccb-44c5-89c6-9fe86078323e'
  - name: REJECTED_EMAIL_TEMPLATE_ID
    description: "The rejected comment email template id"
    required: true
    value: '8410c055-587b-4788-bd2f-b563562bcb2d'
  - name: CLOSED_ENGAGEMENT_REJECTED_EMAIL_TEMPLATE_ID
    description: "The rejected comment email template id for closed engagement"
    required: true
    value: 'e942dea1-094e-4021-9aac-21a0ac1f240d'
  - name: ACCESS_REQUEST_EMAIL_TEMPLATE_ID
    description: "The access request email template id"
    required: true
    value: '41afa792-4c75-425a-9ad9-c558561d6669'
  - name: CORS_MAX_AGE
    description: "Set CORS pre-flight cache duration"
    required: true
    value: '7200'
  - name: CSS_API_ENVIRONMENT
    description: "CSS API environment"
    required: true
    value: dev
  - name: CSS_API_INTEGRATION_ID
    description: "CSS API integration number"
    required: true
    value: '0000'
  - name: CSS_API_URL
    description: "CSS API URL"
    required: true
    value: ''
  - name: EMAIL_ENVIRONMENT
    description: "Environment from which email is sent"
    value: 'You are using a DEV environment'
  - name: S3_BUCKET
    description: "The s3 object store bucket"
    required: true
    value: 'met-web'
  - name: S3_ACCESS_KEY_ID
    description: "The s3 object store access key id"
    required: true
    value: 'met-admin'
  - name: S3_ACCESS_KEY
    description: "The s3 object store access key"
    required: true
    value: 'access-key'
  - name: DB_APP_NAME
    description: "The postgresql application name"
    required: true
    value: met-patroni
  - name: DB_APP_PORT
    description: "The postgresql application port"
    required: true
    value: '5432'
  - name: CORS_ORIGINS
    description: "Allowable origins for Cross-Origin Resource Sharing"
    required: true
    value: 'http://localhost:3000'
  - name: DEFAULT_TENANT_SHORT_NAME
    description: "Short name for default tenant"
    required: true
    value: 'DEFAULT'
  - name: IMAGE_TAG
    description: "The image tag to deploy"
    required: true
    value: latest
  - name: MET_ADMIN_CLIENT_ID
    description: "The MET admin service account id"
    required: true
    value: 'met-admin'
  - name: MET_ADMIN_CLIENT_SECRET
    description: "The MET admin service account secret"
    required: true
  - name: KEYCLOAK_BASE_URL
    description: "Keycloak base url"
    required: true
    value: ''
  - name: KEYCLOAK_REALMNAME
    description: "Realm name for the project"
    required: true
    value: 'standard'
  - name: KEYCLOAK_ADMIN_TOKEN_URL
    description: "Keycloak url to get admin token"
    required: true
    value: ''
  - name: CDOGS_BASE_URL
    description: "Base url to access CDOGS"
    required: true
    value: ''
  - name: CDOGS_SERVICE_CLIENT
    description: "Client for CDOGS Service"
    required: true
    value: 'CDOGS_SERVICE_CLIENT'
  - name: CDOGS_SERVICE_CLIENT_SECRET
    description: "Secret for CDOGS Service"
    required: true
    value: 'CDOGS_SERVICE_CLIENT_SECRET'
  - name: CDOGS_TOKEN_URL
    description: "Token url for CDOGS"
    required: true
    value: ''
  - name: EMAIL_SECRET_KEY
    description: "Secret key for email"
    required: true
    value: 'notASecureKey'
  - name: KEYCLOAK_ADMIN_CLIENT_ID
    description: "Admin Client ID for Keycloak authentication"
    required: true
    value: 'CLIENT_ID'
  - name: KEYCLOAK_ADMIN_CLIENT_SECRET
    description: "Admin Client Secret for Keycloak authentication"
    required: true
    value: 'CLIENT_SECRET'