apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: api-deploy-template
  annotations:
    description: "Deployment Configuration Template for the MET API NOTIFY Project"
    tags: "met, api, python, notify"
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP}
          environment: ${ENV}
          role: api
      spec:
        containers:
        - env:
          - name: FLASK_ENV
            value: production
          - name: JWT_OIDC_AUDIENCE
            value: account
          envFrom:
          - configMapRef:
              name: ${APP}
          - configMapRef:
              name: jwt-oidc
          - secretRef:
              name: ${APP}-secret
          imagePullPolicy: Always
          name: ${APP}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 150m
              memory: 512Mi
            requests:
              cpu: 75m
              memory: 100Mi
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP}
        from:
          kind: ImageStreamTag
          name: ${APP}:${IMAGE_TAG}
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}-path
  spec:
    host: met-notify-api-${ENV}.apps.gold.devops.gov.bc.ca
    path: /api
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APP}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  data:
    EMAIL_PROVIDER: ${EMAIL_PROVIDER}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: jwt-oidc
      app-group: met-app
    name: jwt-oidc
  data:
    JWT_OIDC_ALGORITHMS: RS256
    JWT_OIDC_AUDIENCE: account
    JWT_OIDC_ISSUER: https://${KC_DOMAIN}/auth/realms/met
    JWT_OIDC_JWKS_URI: https://${KC_DOMAIN}/auth/realms/met/protocol/openid-connect/certs
    JWT_OIDC_WELL_KNOWN_CONFIG: https://${KC_DOMAIN}/auth/realms/met/.well-known/openid-configuration
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: ${APP}-secret
    labels:
      app: ${APP}
      app-group: met-app
      app.kubernetes.io/part-of: ${APP}
  stringData:
    GC_NOTIFY_API_KEY: "${GC_NOTIFY_API_KEY}"
    GC_NOTIFY_API_BASE_URL: "${GC_NOTIFY_API_BASE_URL}"
    GC_NOTIFY_EMAIL_TEMPLATE_ID: "${GC_NOTIFY_EMAIL_TEMPLATE_ID}"
    CHES_SSO_TOKEN_URL: "${CHES_SSO_TOKEN_URL}"
    CHES_SSO_CLIENT_ID: "${CHES_SSO_CLIENT_ID}"
    CHES_SSO_CLIENT_SECRET: "${CHES_SSO_CLIENT_SECRET}"
    CHES_POST_EMAIL_ENDPOINT: "${CHES_POST_EMAIL_ENDPOINT}"
    CHES_EMAIL_FROM_ID: "${CHES_EMAIL_FROM_ID}"
 
parameters:
  - name: APP
    description: "The application name"
    value: notify-api
  - name: IMAGE_NAMESPACE
    description: "The image stream location namespace"
    value: e903c2-tools
  - name: ENV
    description: "The selected environment (dev, test, prod)"
    value: dev
  - name: KC_DOMAIN
    description: "The keycloak domain"
    value: met-oidc-dev.apps.gold.devops.gov.bc.ca
  - name: DB_APP_NAME
    description: "The postgresql application name"
    value: postgresql-met
  - name: IMAGE_TAG
    description: "The image tag to deploy"
    value: latest
  - name: GC_NOTIFY_API_KEY
    description: "GC Notify API Key"
    value: 
  - name: GC_NOTIFY_API_BASE_URL
    description: "GC Notify API URL"
    value: https://api.notification.canada.ca/v2
  - name: GC_NOTIFY_EMAIL_TEMPLATE_ID
    description: "GC Notify email template id"
    value: 'c4cc1633-321a-4400-8a22-272acecd836a'
  - name: CHES_SSO_TOKEN_URL
    description: "CHES Token Url"
    value: https://dev.oidc.gov.bc.ca/auth/realms/jbd6rnxw/protocol/openid-connect/token        
  - name: CHES_SSO_CLIENT_ID
    description: "CHES Client Id"
    value: MET_SERVICE_CLIENT        
  - name: CHES_SSO_CLIENT_SECRET
    description: "CHES Client Secret"
    value:    
  - name: CHES_POST_EMAIL_ENDPOINT
    description: "CHES Post Email endpoint"
    value: https://ches-dev.apps.silver.devops.gov.bc.ca/api/v1/email            
  - name: EMAIL_PROVIDER
    description: "CHES or GC_NOTIFY"
    value: GC_NOTIFY
  - name: CHES_EMAIL_FROM_ID
    description: "CHES From email id"
    value: modernengagement@gov.bc.ca         