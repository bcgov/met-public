# Compiled for: {{required "Please use one of --values values_dev.yaml, --values values_test.yaml, or --values values_prod.yaml" .Values.environment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app: {{ .Values.app.name }}
    app-group: notify-api
spec:
  replicas: {{ .Values.app.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        environment: {{ .Values.environment }}
        role: api
      annotations:
        image.openshift.io/triggers: >
          [
            {
              "automatic": true,
              "from": {
                "kind": "ImageStreamTag",
                "name": "{{ .Values.app.name }}:{{ .Values.image.tag }}",
                "namespace": "{{ .Values.image.namespace }}"
              },
              "fieldPath": "spec.template.spec.containers[?(name=='{{ .Values.app.name }}')].image"
            }
          ]
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-init-first: 'true'
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        vault.hashicorp.com/namespace: {{ .Values.vault.namespace }}
        vault.hashicorp.com/role: {{ .Values.vault.engine }}
        vault.hashicorp.com/auth-path: {{ .Values.vault.authPath }}
        vault.hashicorp.com/agent-inject-secret-email: {{ .Values.vault.engine }}{{ .Values.vault.path }}/email
        vault.hashicorp.com/agent-inject-template-email: |
          {{ `{{- with secret ` }}"{{ .Values.vault.engine }}{{ .Values.vault.path }}/email"{{ ` }}
          {{- range $k, $v := .Data.data }}
          export {{ $k }}='{{ $v }}'
          {{- end }}
          {{- end }}` }}
        vault.hashicorp.com/agent-inject-secret-met-jwt-oidc: {{ .Values.vault.engine }}{{ .Values.vault.path }}/jwt-oidc
        vault.hashicorp.com/agent-inject-template-met-jwt-oidc: |
          {{ `{{- with secret ` }}"{{ .Values.vault.engine }}{{ .Values.vault.path }}/jwt-oidc"{{ ` }}
          {{- range $k, $v := .Data.data }}
          {{- if eq $k "MET_ADMIN_CLIENT_ID" }}
          export JWT_OIDC_AUDIENCE='{{ $v }}'
          {{- else if eq $k "MET_ADMIN_CLIENT_SECRET" }}
          export JWT_OIDC_CLIENT_SECRET='{{ $v }}'
          {{- else }}
          export {{ $k }}='{{ $v }}'
          {{- end }}
          {{- end }}
          {{- end }}` }}
        vault.hashicorp.com/agent-inject-secret-global: {{ .Values.vault.engine }}{{ .Values.vault.path }}/global
        vault.hashicorp.com/agent-inject-template-global: |
          {{ `{{- with secret ` }}"{{ .Values.vault.engine }}{{ .Values.vault.path }}/global"{{ ` }}
          {{- range $k, $v := .Data.data }}
          export {{ $k }}='{{ $v }}'
          {{- end }}
          {{- end }}` }}
    spec:
      serviceAccountName: {{ .Values.app.licenseplate }}-vault
      containers:
      - name: {{ .Values.app.name }}
        image: {{ .Values.image.repository }}/{{ .Values.app.name }}:{{ .Values.image.tag }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        envFrom:
        - configMapRef:
            name: {{ .Values.app.name }}
        imagePullPolicy: Always
        stdin: true
        tty: true
        command:
        - /bin/bash
        - -c
        - |
          source /vault/secrets/email && \
          source /vault/secrets/met-jwt-oidc && \
          source /vault/secrets/global && \
          bash /opt/app-root/docker-entrypoint.sh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30