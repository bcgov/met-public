apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: web-deploy-template
  annotations:
    description: "Deployment Configuration Template for the MET WEB Project"
    tags: "met, web, reactjs, typescript, jest"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: nginx-base-auth-secret
  data:
    htpasswd: base64_encoded_htpasswd_entry
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APP}
    labels:
      app: ${APP}
      app-group: met-app
  data:
    config.js: |-
      window["_env_"] = {
        "NODE_ENV": "production",
        "REACT_APP_API_URL": "https://${APP}-${ENV}.apps.gold.devops.gov.bc.ca/api/",
        "REACT_APP_ANALYTICS_API_URL": "https://analytics-api-${ENV}.apps.gold.devops.gov.bc.ca/api/",
        // Keycloak
        "REACT_APP_KEYCLOAK_URL": "https://met-oidc.apps.gold.devops.gov.bc.ca/auth",
        "REACT_APP_KEYCLOAK_CLIENT": "${KC_CLIENT}",
        "REACT_APP_KEYCLOAK_REALM": "${KC_REALM}",
        // Redash
        "REACT_APP_REDASH_PUBLIC_URL": "https://met-analytics.apps.gold.devops.gov.bc.ca/public/dashboards/<PUBLIC_DASHBOARD_ID>?p_Engagement%20Name=",
        "REACT_APP_REDASH_COMMENTS_PUBLIC_URL": "https://met-analytics.apps.gold.devops.gov.bc.ca/public/dashboards/<COMMENTS_ASHBOARD_ID>?p_Engagement%20Name=",
      }
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP}
          app-group: met-app
          environment: ${ENV}
      spec:
        volumes:
          - name: ${APP}-config
            configMap:
              defaultMode: 420
              name: ${APP}
          - name: ${APP}-secret-volume
            secret:
              secretName: nginx-base-auth-secret
        containers:
          - resources:
              limits:
                cpu: 300m
                memory: 1Gi
              requests:
                cpu: 150m
                memory: 250Mi
            readinessProbe:
              httpGet:
                path: /readiness
                port: 8080
                scheme: HTTP
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            stdin: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
            name: ${APP}
            ports:
              - containerPort: 3000
                protocol: TCP
            tty: true
            volumeMounts:
            - mountPath: /usr/share/nginx/html/config/
              name: ${APP}-config
              readOnly: true
            - name: ${APP}-secret-volume
              mountPath: /etc/nginx/.htpasswd
              subPath: htpasswd  # Use the key from the Secret
              readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP}
        from:
          kind: ImageStreamTag
          name: ${APP}:${IMAGE_TAG}
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: autoscaling/v2beta2
  kind: HorizontalPodAutoscaler
  metadata:
    name: metwebhpa
  spec:
    scaleTargetRef:
      kind: DeploymentConfig
      name: ${APP}
      apiVersion: apps.openshift.io/v1
    minReplicas: 2
    maxReplicas: 3
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APP}
      app-group: met-app
    name: ${APP}
  spec:
    host: ${APP}-${ENV}.apps.gold.devops.gov.bc.ca
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APP}
      weight: 100
    wildcardPolicy: None
parameters:
  - name: APP
    description: "The application name"
    value: met-web
  - name: IMAGE_NAMESPACE
    description: "The image stream location namespace"
    value: c72cba-tools
  - name: ENV
    description: "The selected environment (dev, test, prod)"
    value: dev
  - name: KC_CLIENT
    description: "The keycloak client id"
    value: met-web
  - name: KC_REALM
    description: "The keycloak realm"
    value: met
  - name: IMAGE_TAG
    description: "The image tag to deploy"
    value: latest
    