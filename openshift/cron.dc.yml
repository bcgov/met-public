apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Deployment template for a MET CRON job.
    tags: ${NAME}
  name: ${NAME}-deploy
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
      app-group: ${APP_GROUP}
      template: ${NAME}-deploy
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
        pre:
          execNewPod:
            command:
            - /met-cron/pre-hook-update-db.sh
            containerName: ${NAME}
          failurePolicy: Abort
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          namespace: ${IMAGE_NAMESPACE}
          name: ${NAME}:${IMAGE_TAG}
    - type: ConfigChange
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
          app-group: ${APP_GROUP}
          environment: ${ENV}
          deploymentconfig: ${NAME}
          template: ${NAME}-deploy
      spec:
        volumes:
        - name: cron-config
          configMap:
            name: ${NAME}-config
            defaultMode: 420
        containers:
        - name: ${NAME}
          image: image-registry.openshift-image-registry.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${IMAGE_TAG}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: cron-config
            readOnly: true
            mountPath: /met-cron/cron/
          env:
            # these MET analytics DB details which is the master DB
            - name: DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${DATABASE_NAME}-secret
                  key: DATABASE_PASSWORD
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_NAME
            - name: DATABASE_HOST
              value: ${DATABASE_HOST}
            - name: DATABASE_PORT
              value: ${DATABASE_PORT}
            # MET Master DB Details     
            - name: MET_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${MET_DATABASE_HOST}
            - name: MET_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${MET_DATABASE_HOST}
            - name: MET_DB_NAME
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${MET_DATABASE_HOST}
            - name: MET_DATABASE_HOST
              value: ${MET_DATABASE_HOST}
            - name: MET_DATABASE_PORT
              value: ${MET_DATABASE_PORT}
            - name: DATABASE_TEST_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_TEST_USER
            - name: DATABASE_TEST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${DATABASE_NAME}-secret
                  key: DATABASE_TEST_PASSWORD
            - name: DATABASE_TEST_NAME
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_TEST_NAME
            - name: DATABASE_TEST_HOST
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_TEST_HOST
            - name: DATABASE_TEST_PORT
              valueFrom:
                configMapKeyRef:
                  name: ${DATABASE_NAME}-config
                  key: DATABASE_TEST_PORT
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: ${NAME}
    creationTimestamp:
    labels:
      app: ${NAME}
      app-group: ${APP_GROUP}
      template: ${NAME}-deploy
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: ${NAME}
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the OpenShift resources associated to the
    server instance.
  required: true
  value: met-cron
- name: APP_GROUP
  displayName: App Group
  description: The name assigned to all of the deployments in this project.
  required: true
  value: met-app
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  required: true
  description: The namespace of the OpenShift project containing the imagestream for
    the application.
  value: e903c2-tools
- name: ENV
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod
  required: true
  value: dev
- name: DATABASE_HOST
  displayName: Analytics Database App Name
  description: "The analytics postgresql application name."
  required: true
  value: postgresql-edw
- name: DATABASE_PORT
  displayName: Analytics Database App Port
  description: "The analytics postgresql application port."
  required: true
  value: 5432
- name: DATABASE_NAME
  displayName: Database Name for MET Analytics DB
  description: The database name used by the analytics service.
  required: true
  value: met-analytics
- name: MET_DATABASE_HOST
  description: "The transactional postgresql application name."
  value: postgresql-met
- name: MET_DATABASE_PORT
  description: "The transactional postgresql application port"
  value: 5432
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 100m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 750m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 100Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 2Gi
- name: REPLICAS
  displayName: The number of replicas to run
  description: The number of replicas to run in this environment.
  required: true
  value: '1'
- name: IMAGE_TAG
  description: "The image tag to deploy"
  value: latest
