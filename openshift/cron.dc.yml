apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cron-deploy-template
  annotations:
    description: "Deployment Configuration Template for the MET Cron job Project"
    tags: "met, cron, python"
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
      app-group: met-app
      template: ${NAME}-deploy
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
        pre:
          execNewPod:
            command:
            - /met-cron/pre-hook-update-db.sh
            containerName: ${NAME}
          failurePolicy: Abort
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          namespace: ${IMAGE_NAMESPACE}
          name: ${NAME}:${IMAGE_TAG}
    - type: ConfigChange
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
          app-group: met-app
          environment: ${ENV}
          deploymentconfig: ${NAME}
          template: ${NAME}-deploy
      spec:
        volumes:
        - name: cron-config
          configMap:
            name: ${NAME}-config
            defaultMode: 420
        containers:
        - name: ${NAME}
          image: image-registry.openshift-image-registry.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${IMAGE_TAG}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: cron-config
            readOnly: true
            mountPath: /met-cron/cron/
          env:
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: met-username
                  name: met-database-users
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: met-database-users
                  key: met-password
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: ${DATABASE_HOST}
                  key: app-db-name
            - name: DATABASE_HOST
              value: ${DATABASE_HOST}
            - name: DATABASE_PORT
              value: ${DATABASE_PORT}
          envFrom:
            - configMapRef:
                name: ${NAME}
            - secretRef:
                name: met-service-account
            - configMapRef:
                name: jwt-oidc
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: ${NAME}
    creationTimestamp:
    labels:
      app: ${NAME}
      app-group: met-app
      template: ${NAME}-deploy
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: ${NAME}
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: jwt-oidc
      app-group: met-app
    name: jwt-oidc
  data:
    JWT_OIDC_ALGORITHMS: RS256
    JWT_OIDC_AUDIENCE: account
    JWT_OIDC_ISSUER: https://${KC_DOMAIN}/auth/realms/met
    JWT_OIDC_JWKS_URI: https://${KC_DOMAIN}/auth/realms/met/protocol/openid-connect/certs
    JWT_OIDC_WELL_KNOWN_CONFIG: https://${KC_DOMAIN}/auth/realms/met/.well-known/openid-configuration
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: ${NAME}
      app-group: met-app
    name: ${NAME}
  data:
    CLOSEOUT_EMAIL_TEMPLATE_ID: ${CLOSEOUT_EMAIL_TEMPLATE_ID}
    CLOSING_SOON_EMAIL_TEMPLATE_ID: ${CLOSING_SOON_EMAIL_TEMPLATE_ID}
    EMAIL_ENVIRONMENT: ${EMAIL_ENVIRONMENT}
    EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS}
    KEYCLOAK_BASE_URL: ${KEYCLOAK_BASE_URL}
    KEYCLOAK_REALMNAME: ${KEYCLOAK_REALMNAME}
    NOTIFICATIONS_EMAIL_ENDPOINT: ${NOTIFICATIONS_EMAIL_ENDPOINT}
    OFFSET_DAYS: ${OFFSET_DAYS}
    PUBLISH_EMAIL_TEMPLATE_ID: ${PUBLISH_EMAIL_TEMPLATE_ID}
    SITE_URL: ${SITE_URL}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: met-service-account
    labels:
      app: met-service-account
      app-group: met-app
  stringData:
    MET_ADMIN_CLIENT_ID: ${MET_ADMIN_CLIENT_ID}
    MET_ADMIN_CLIENT_SECRET: ${MET_ADMIN_CLIENT_SECRET}
- kind: Secret
  apiVersion: v1
  type: Opaque
  metadata:
    name: email-secret-key
    labels:
      app: email-secret-key
      app-group: met-app
  stringData:
    EMAIL_SECRET_KEY: ${EMAIL_SECRET_KEY}
parameters:
- name: NAME
  description: "The name assigned to all of the OpenShift resources associated to the server instance."
  required: true
  value: met-cron
- name: IMAGE_NAMESPACE
  required: true
  description: "The namespace of the OpenShift project containing the imagestream for the application."
  value: e903c2-tools
- name: ENV
  description: "The TAG name for this environment, e.g.(dev, test, prod)."
  required: true
  value: dev
- name: DATABASE_HOST
  description: "The met postgresql application name."
  required: true
  value: met-patroni
- name: DATABASE_PORT
  description: "The met postgresql application port."
  required: true
  value: '5432'
- name: CPU_REQUEST
  description: "The resources CPU request (in cores) for this build."
  required: true
  value: 100m
- name: CPU_LIMIT
  description: "The resources CPU limit (in cores) for this build."
  required: true
  value: 750m
- name: MEMORY_REQUEST
  description: "The resources Memory request (in Mi, Gi, etc) for this build."
  required: true
  value: 100Mi
- name: MEMORY_LIMIT
  description: "The resources Memory limit (in Mi, Gi, etc) for this build."
  required: true
  value: 2Gi
- name: REPLICAS
  description: "The number of replicas to run in this environment."
  required: true
  value: '1'
- name: IMAGE_TAG
  description: "The image tag to deploy"
  value: latest
- name: KC_DOMAIN
  description: "The keycloak domain"
  value: met-oidc-dev.apps.gold.devops.gov.bc.ca
- name: SITE_URL
  description: "The frontend site URL"
  required: true
  value: 'https://met-web-dev.apps.gold.devops.gov.bc.ca'
- name: NOTIFICATIONS_EMAIL_ENDPOINT
  description: "The email notification endpoint"
  required: true
  value: 'https://met-notify-api-dev.apps.gold.devops.gov.bc.ca/api/v1/notifications/email'
- name: OFFSET_DAYS
  description: "Days in which the engagement closing soon email is sent"
  required: true
  value: '2'
- name: CLOSEOUT_EMAIL_TEMPLATE_ID
  description: "The engagement closeout email template id"
  value: 'b7ea041b-fc30-4ad3-acb2-82119dd4f95d'
- name: CLOSING_SOON_EMAIL_TEMPLATE_ID
  description: "The engagement closing soon email template id to send email n days before closing"
  value: '30344886-ea33-4ca2-83e1-e5ebe9c3457d'
- name: EMAIL_ENVIRONMENT
  description: "Environment from which email is sent"
  value: 'You are using a DEV environment'
- name: EMAIL_FROM_ADDRESS
  description: "Email from address"
  value: 'met-example@gov.bc.ca'
- name: KEYCLOAK_BASE_URL
  description: "Keycloak base url"
  value: ''
- name: KEYCLOAK_REALMNAME
  description: "Realm name for the project"
  value: 'standard'
- name: PUBLISH_EMAIL_TEMPLATE_ID
  description: "The publish engagement email template id"
  value: '7bf2ffcd-d69e-4c3f-9aa0-e8e89b491e92'
- name: MET_ADMIN_CLIENT_ID
  description: "The MET admin service account id"
  required: true
  value: 'met-admin'
- name: MET_ADMIN_CLIENT_SECRET
  description: "The MET admin service account secret"
  required: true
- name: EMAIL_SECRET_KEY
  description: "Secret key for email"
  required: true
  value: 'notASecureKey'