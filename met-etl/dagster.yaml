scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator

run_launcher:
  module: dagster_docker
  class: DockerRunLauncher
  config:
    env_vars:
      - DAGSTER_POSTGRES_HOSTNAME
      - DAGSTER_POSTGRES_USER
      - DAGSTER_POSTGRES_PASSWORD
      - DAGSTER_POSTGRES_DB
      - MET_DB_USER
      - MET_DB_PASSWORD
      - MET_DB_DB
      - MET_DB_HOST
      - MET_DB_PORT
      - MET_ANALYTICS_DB_USER
      - MET_ANALYTICS_DB_PASSWORD
      - MET_ANALYTICS_DB_DB
      - MET_ANALYTICS_DB_HOST
      - MET_ANALYTICS_DB_PORT
    network: metnetwork
    container_kwargs:
      volumes: # Make docker client accessible to any launched containers as well
        - /var/run/docker.sock:/var/run/docker.sock
        - /tmp/io_manager_storage:/tmp/io_manager_storage

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname:
        env: DAGSTER_POSTGRES_HOSTNAME
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname:
        env: DAGSTER_POSTGRES_HOSTNAME
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

retention:
  event_log:
    purge_after_days: 90 # retain event logs for 90 days
  schedule:
    purge_after_days: 90 # retain schedule ticks for 90 days
  run:
    purge_after_days: 90 # retain run logs for 90 days
  sensor:
    purge_after_days:
      skipped: 7 # retain skipped sensor ticks for 7 days
      failure: 30 # retain failed sensor ticks for 30 days
      success: 30 # retain successful sensor ticks for 30 days
