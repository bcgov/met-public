name: MET WEB DEV CD


on:
  push:
    branches:
      - main
    paths:
      - "met-web/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"
      project_type:
        description: "Project Type (EAO/GDX)"
        required: false
        default: "GDX" # Default value is GDX    

defaults:
  run:
    shell: bash
    working-directory: ./met-web

env:
  APP_NAME: "met-web"
  TAG_NAME: "${{ github.event.inputs.environment || 'dev' }}" # If the environment type is manually selected, use the input value; otherwise, use 'dev' as default
  
  PROJECT_TYPE: "${{ github.event.inputs.project_type || 'GDX' }}" # If the project type is manually selected, use the input value; otherwise, use 'GDX' as default

  OPENSHIFT_LOGIN_REGISTRY: ${{ secrets.OPENSHIFT_LOGIN_REGISTRY }}
  OPENSHIFT_SA_TOKEN: ${{ github.event.inputs.project_type == 'EAO' && secrets.OPENSHIFT_SA_TOKEN_EAO || secrets.OPENSHIFT_SA_TOKEN }}
  OPENSHIFT_SA_NAME: ${{ github.event.inputs.project_type == 'EAO' && secrets.OPENSHIFT_SA_NAME_EAO || secrets.OPENSHIFT_SA_NAME }}
  OPENSHIFT_IMAGE_REGISTRY: ${{ github.event.inputs.project_type == 'EAO' && secrets.OPENSHIFT_IMAGE_REGISTRY_EAO || secrets.OPENSHIFT_IMAGE_REGISTRY }}
  OPENSHIFT_REPOSITORY: ${{ github.event.inputs.project_type == 'EAO' && secrets.OPENSHIFT_REPOSITORY_EAO || secrets.OPENSHIFT_REPOSITORY }}

jobs:
  met-web-cd:
    runs-on: ubuntu-20.04

    if: github.repository == 'bcgov/met-public'
    environment:
      name: "dev"

    steps:
      - uses: actions/checkout@v2

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{env.OPENSHIFT_LOGIN_REGISTRY}} --token=${{env.OPENSHIFT_SA_TOKEN}}

      - name: Login Docker
        run: |
          echo "${{ env.OPENSHIFT_SA_TOKEN }}" | 
          docker login ${{ env.OPENSHIFT_IMAGE_REGISTRY }} -u ${{ env.OPENSHIFT_SA_NAME}} --password-stdin

      - name: Build image
        run: |
          docker build . --file Dockerfile --tag image

      - name: Push image
        run: |
          IMAGE_ID=${{ env.OPENSHIFT_IMAGE_REGISTRY }}/"${{ env.OPENSHIFT_REPOSITORY}}-tools"/$APP_NAME
          docker tag image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
          docker image tag $IMAGE_ID:latest $IMAGE_ID:$TAG_NAME
          docker push $IMAGE_ID:$TAG_NAME

      - name: Rollout
        shell: bash
        run: |
          oc rollout status dc/${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_REPOSITORY }}-${{ env.TAG_NAME }} -w
